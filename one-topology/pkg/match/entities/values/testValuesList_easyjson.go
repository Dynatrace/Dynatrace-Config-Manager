// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package values

import (
	"github.com/mailru/easyjson/jlexer"
	"github.com/mailru/easyjson/jwriter"
)

func (RawEntityList) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*RawEntityList) UnmarshalJSON([]byte) error        { return nil }
func (RawEntityList) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*RawEntityList) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RawEntityList *RawEntityList

func (Value) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*Value) UnmarshalJSON([]byte) error        { return nil }
func (Value) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*Value) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Value *Value

func (fromRelationships) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*fromRelationships) UnmarshalJSON([]byte) error        { return nil }
func (fromRelationships) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*fromRelationships) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_fromRelationships *fromRelationships

func (metadata) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*metadata) UnmarshalJSON([]byte) error        { return nil }
func (metadata) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*metadata) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_metadata *metadata

func (properties) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*properties) UnmarshalJSON([]byte) error        { return nil }
func (properties) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*properties) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_properties *properties

func (relation) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*relation) UnmarshalJSON([]byte) error        { return nil }
func (relation) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*relation) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_relation *relation

func (testValues) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*testValues) UnmarshalJSON([]byte) error        { return nil }
func (testValues) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*testValues) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_testValues *testValues

func (testValuesHierarchy) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*testValuesHierarchy) UnmarshalJSON([]byte) error        { return nil }
func (testValuesHierarchy) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*testValuesHierarchy) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_testValuesHierarchy *testValuesHierarchy

func (testValuesList) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*testValuesList) UnmarshalJSON([]byte) error        { return nil }
func (testValuesList) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*testValuesList) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_testValuesList *testValuesList

func (testValuesListHierarchy) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*testValuesListHierarchy) UnmarshalJSON([]byte) error        { return nil }
func (testValuesListHierarchy) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*testValuesListHierarchy) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_testValuesListHierarchy *testValuesListHierarchy
